name: Docker Build and Push to GitHub Packages

on:
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get-latest-tag
        run: |
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          else
            echo "LATEST_TAG=0.0.1" >> $GITHUB_ENV  # Default jika belum ada tag
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/sasuai-store:${{ env.LATEST_TAG }}
          build-args: |
            GIT_TAG=${{ env.LATEST_TAG }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DIRECT_URL=${{ secrets.DIRECT_URL }}
            BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
            BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
            EMAIL_VERIFICATION_CALLBACK_URL=${{ secrets.EMAIL_VERIFICATION_CALLBACK_URL }}
            MAINTENANCE_MODE=${{ secrets.MAINTENANCE_MODE }}
            NODE_ENV=production
            EMAIL_FROM_ADDRESS=${{ secrets.EMAIL_FROM_ADDRESS }}
            NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
            NEXT_PUBLIC_CLOUDINARY_API_KEY=${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            ENABLE_SIGNUP=${{ secrets.ENABLE_SIGNUP }}
